import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.datasets import fetch_california_housing
california = fetch_california_housing()
df = pd.DataFrame(california.data, columns=california.feature_names)
df['PRICE'] = california.target

print(df.isnull().sum())
print(df.describe())
sns.pairplot(df, x_vars=['MedInc', 'AveOccup', 'Population'], y_vars='PRICE', height=5, aspect=0.5, kind='reg')
plt.show()

X = df.drop('PRICE', axis=1)
y = df['PRICE']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
mae = mean_absolute_error(y_test, y_pred)
print(f'Mean Squared Error: {mse}')
print(f'R^2 Score: {r2}')
print(f'Mean Absolute Error: {mae}')
plt.figure(figsize=(10, 6))
plt.scatter(y_test, y_test, color='blue', label='Actual Prices')
plt.scatter(y_test, y_pred, color='red', label='Predicted Prices')
plt.xlabel('Actual Prices')
plt.ylabel('Prices')
plt.title('Actual vs Predicted Prices')
plt.legend()
plt.show()
